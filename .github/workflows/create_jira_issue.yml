name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/feature.yml

      - name: Log Issue Parser
        id: date
        run: |
          echo '${{ steps.issue-parser.outputs.jsonString }}'
          echo "Branch Name : ${{ steps.issue-parser.outputs.issueparser_branch }}"
          echo "checkbox : ${{ steps.issue-parser.outputs.issueparser_without_jira_issue }}"
          echo "DUE_DATE : ${{ steps.issue-parser.outputs.issueparser_due_date }}"
          echo "START_DATE=$(date +%F)" >> $GITHUB_OUTPUT
          echo "START_DATE : ${{ steps.date.outputs.START_DATE }}"
          if [[ "${{ steps.issue-parser.outputs.issueparser_due_date }}" == "" ]]; then
            echo "DUE_DATE=$(date -d '1 days' +%F)" >> $GITHUB_OUTPUT
          else
            echo "DUE_DATE=${{ steps.issue-parser.outputs.issueparser_due_date }}" >> $GITHUB_OUTPUT
          fi
          echo "DUE_DATE : ${{ steps.date.outputs.DUE_DATE }}"

      - name: Convert markdown to Jira Syntax
        if: ${{ steps.issue-parser.outputs.issueparser_without_jira_issue != '지라 이슈를 만들지 않을래요' }}
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira

      - name: Create Issue
        if: ${{ steps.issue-parser.outputs.issueparser_without_jira_issue != '지라 이슈를 만들지 않을래요' }}
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: TINU
          issuetype: CLIENT
          summary: "${{ github.event.issue.title }}"
          description: "${{ steps.md2jira.outputs.output-text }}"
          fields: '{"parent": { "key": "TINU-49" }, "customfield_10015": "${{ steps.date.outputs.START_DATE }}", "duedate": "${{ steps.date.outputs.DUE_DATE }}"}'

      - name: Log created issue
        if: ${{ steps.issue-parser.outputs.issueparser_without_jira_issue != '지라 이슈를 만들지 않을래요' }}
        id: issue-num
        run: |
          echo "Jira Issue ${{ steps.issue-parser.outputs.parentKey }}/${{ steps.create.outputs.issue }} was created"
          FULL_ISSUE="${{ steps.create.outputs.issue }}"
          ISSUE_NUM=$(echo "$FULL_ISSUE" | sed 's/.*-//')
          echo "ISSUE_NUM=$ISSUE_NUM" >> $GITHUB_ENV
          echo "Extracted ISSUE_NUM is: $ISSUE_NUM"

      - name: Create branch with Ticket number
        if: ${{ steps.issue-parser.outputs.issueparser_branch != '' }}
        run: |
          WITHOUT_JIRA="${{ steps.issue-parser.outputs.issueparser_without_jira_issue }}"

          if [[ "$WITHOUT_JIRA" == "지라 이슈를 만들지 않을래요" ]]; then
            BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branch }}"
          else
            BRANCH_NAME="${{ steps.create.outputs.issue }}/${{ steps.issue-parser.outputs.issueparser_branch }}"
          fi

          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

      - name: Update issue title
        if: ${{ steps.issue-parser.outputs.issueparser_without_jira_issue != '지라 이슈를 만들지 않을래요' }}
        uses: actions-cool/issues-helper@v3
        with:
          actions: "update-issue"
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "${{ github.event.issue.title }} - ${{ env.ISSUE_NUM }} "
